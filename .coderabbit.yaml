language: en
early_access: false
reviews:
  high_level_summary: true
  sequence_diagrams: true
  poem: false
  review_status: true
  collapse_walkthrough: false
  changed_files_summary: true
  auto_review:
    enabled: true
    auto_incremental_review: true
  path_filters:
    - "!**/.github/**"
    - "!**/node_modules/**"  # Exclude dependencies
    - "!**/node_modules/**"  # Exclude dependencies
    - "!**/dist/**"          # Exclude build files
    - "!**/specify/**"       # Exclude Speckit files
  path_instructions:
    - path: "specs/**/spec.md"
      instructions: |
        Speckit specs capture the constitution for behaviour. Confirm changes satisfy acceptance criteria, update impacted requirements, and flag any divergence or missing traceability.
    - path: "specs/**/plan.md"
      instructions: |
        Use the delivery plan to validate sequencing, observability, and resiliency hooks promised for a spec. Highlight unimplemented tasks or newly introduced risks.
    - path: "src/**/*.{ts,tsx,js}"
      instructions: |
        Review the React.js/TypeScript/JavaScript code for best practices and potential bugs.
        Ensure that the code adheres to TypeScript's typing system and modern standards.
        Use the following code guide documentation in the codebase: 'docs/code-guidelines.md'.
        Ensure sufficient error handling and logging is present, **but note:**
        - We have a global error handler in place. So local `try/catch` blocks are not required unless they provide value beyond what the global error handler already covers.
        - Avoid flagging the absence of local error handling in cases where the global error handler suffices.
        - Avoid flagging the absence of logging in cases where the global logger is already in place (graphql usage).

        Inform about the recommendation of not using non-null assertion,
        except on GraphQL queries where the variable is asserted non-null and followed by a
        `skip:` with the same variable.
        Examples:
        - Not Required: there's a skip
         {
          variables: { templateId: templateId! },
          skip: !templateId,
         }

        Check for common security vulnerabilities such as:
        - SQL Injection
        - XSS (Cross-Site Scripting)
        - CSRF (Cross-Site Request Forgery)
        - Insecure dependencies
        - Sensitive data exposure
    - path: "src/**/*.{graphql,gql}"
      instructions: |
        Review the GraphQL schema and queries for best practices, potential bugs, and adherence to the project's GraphQL standards.
        Ensure that the schema is well-defined and queries are optimized.
        Check for security vulnerabilities.
    - path: "src/**/*.json"
      instructions: |
        Review the JSON files for correct syntax and structure.
        Ensure that the configuration and data are accurate and follow the project's standards.
        Check for sensitive data exposure and ensure that the data is properly validated.
    - path: "public/**/*.html"
      instructions: |
        Review the HTML files for correct syntax and structure.
        Ensure that the content is accessible, semantic, and follows the project's standards.
    - path: "src/**/*.yaml"
      instructions: |
        Review the YAML files for correct syntax and structure.
        Ensure that the configuration is accurate and follows the project's standards.
        Check for potential security issues and ensure that the data is properly validated.
    - path: "**/*.md"
      instructions: "Ensure the documentation is clear, concise, and up-to-date, with accurate instructions."
chat:
  auto_reply: true

