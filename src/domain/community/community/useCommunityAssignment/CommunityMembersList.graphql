query CommunityMembersList(
  $communityId: UUID!
  $spaceId: UUID = "00000000-0000-0000-0000-000000000000"
  $includeSpaceHost: Boolean = false
) {
  lookup {
    space(ID: $spaceId) @include(if: $includeSpaceHost) {
      provider {
        ...ContributorDetails
      }
    }
    community(ID: $communityId) {
      id
      authorization {
        id
        myPrivileges
      }
      roleSet {
        ...RoleSetDetails
      }
    }
  }
}

query RoleSetAvailableMembers($roleSetId: UUID!, $first: Int!, $after: UUID, $filter: UserFilterInput) {
  lookup {
    availableMembers: roleSet(ID: $roleSetId) {
      ...RoleSetAvailableMemberUsers
    }
  }
}

fragment RoleSetDetails on RoleSet {
  id
  memberUsers: usersInRole(role: MEMBER) {
    ...CommunityMemberUser
  }
  leadUsers: usersInRole(role: LEAD) {
    ...CommunityMemberUser
  }
  memberOrganizations: organizationsInRole(role: MEMBER) {
    ...OrganizationDetails
  }
  leadOrganizations: organizationsInRole(role: LEAD) {
    ...OrganizationDetails
  }
  virtualContributorsInRole(role: MEMBER) {
    ...CommunityMemberVirtualContributor
  }

  memberRoleDefinition: roleDefinition(role: MEMBER) {
    ...RoleDefinitionPolicy
  }
  leadRoleDefinition: roleDefinition(role: LEAD) {
    ...RoleDefinitionPolicy
  }

  authorization {
    id
    myPrivileges
  }
}

fragment RoleDefinitionPolicy on Role {
  id
  organizationPolicy {
    minimum
    maximum
  }
  userPolicy {
    minimum
    maximum
  }
}

fragment RoleSetAvailableLeadUsers on RoleSet {
  id
  availableUsersForLeadRole(first: $first, after: $after, filter: $filter) {
    users {
      ...AvailableUser
    }
    pageInfo {
      ...PageInfo
    }
  }
}

fragment RoleSetAvailableMemberUsers on RoleSet {
  id
  availableUsersForMemberRole(first: $first, after: $after, filter: $filter) {
    users {
      ...AvailableUser
    }
    pageInfo {
      ...PageInfo
    }
  }
}

fragment CommunityMemberUser on User {
  id
  nameID
  profile {
    id
    displayName
    avatar: visual(type: AVATAR) {
      ...VisualUri
    }
    location {
      id
      city
      country
    }
  }
  email
  firstName
  lastName
}

fragment CommunityMemberVirtualContributor on VirtualContributor {
  id
  nameID
  profile {
    id
    displayName
    url
    avatar: visual(type: AVATAR) {
      ...VisualUri
    }
    location {
      id
      city
      country
    }
  }
}

fragment AvailableUser on User {
  id
  profile {
    id
    displayName
  }
  email
}
