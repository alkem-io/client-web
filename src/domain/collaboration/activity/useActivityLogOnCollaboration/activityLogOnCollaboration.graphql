query activityLogOnCollaboration($collaborationID: UUID!, $limit: Float!, $types: [ActivityEventType!]) {
  activityLogOnCollaboration(queryData: {
    collaborationID: $collaborationID
    limit: $limit
    types: $types
    includeChild: true
  }) {
    id
    collaborationID
    createdDate
    description
    type
    child
    parentNameID
    journeyDisplayName: parentDisplayName
    __typename
    triggeredBy {
      id
      nameID
      firstName
      lastName
      profile {
        id
        displayName
        avatar: visual(type: AVATAR) {
          id
          uri
        }
        tagsets {
          ...TagsetDetails
        }
        location {
          id
          city
          country
        }
      }
    }
    ... on ActivityLogEntryMemberJoined {
      ...ActivityLogMemberJoined
    }
    ... on ActivityLogEntryCalloutPublished {
      ...ActivityLogCalloutPublished
    }
    ... on ActivityLogEntryCalloutPostCreated {
      ...ActivityLogCalloutPostCreated
    }
    ... on ActivityLogEntryCalloutLinkCreated {
      ...ActivityLogCalloutLinkCreated
    }
    ... on ActivityLogEntryCalloutPostComment {
      ...ActivityLogCalloutPostComment
    }
    ... on ActivityLogEntryCalloutWhiteboardCreated {
      ...ActivityLogCalloutWhiteboardCreated
    }
    ... on ActivityLogEntryCalloutDiscussionComment {
      ...ActivityLogCalloutDiscussionComment
    }
    ... on ActivityLogEntryChallengeCreated {
      ...ActivityLogChallengeCreated
    }
    ... on ActivityLogEntryOpportunityCreated {
      ...ActivityLogOpportunityCreated
    }
    ... on ActivityLogEntryUpdateSent {
      ...ActivityLogUpdateSent
    }
    ... on ActivityLogEntryCalendarEventCreated {
      ...ActivityLogCalendarEventCreated
    }
  }
}

fragment ActivityLogMemberJoined on ActivityLogEntryMemberJoined {
  communityType
  user {
    id
    nameID
    firstName
    lastName
    profile {
      id
      displayName
      visual(type: AVATAR) {
        id
        uri
      }
      tagsets {
        ...TagsetDetails
      }
      location {
        id
        city
        country
      }
    }
  }
}
fragment ActivityLogCalloutPublished on ActivityLogEntryCalloutPublished {
  callout {
    id
    nameID
    type
    profile {
      id
      displayName
    }
  }
}

fragment ActivityLogCalloutPostCreated on ActivityLogEntryCalloutPostCreated {
  callout {
    id
    nameID
    profile {
      id
      displayName
    }
  }
  post {
    id
    nameID
    type
    profile {
      id
      displayName
      description
    }
  }
}

fragment ActivityLogCalloutLinkCreated on ActivityLogEntryCalloutLinkCreated {
  callout {
    id
    nameID
    profile {
      id
      displayName
    }
  }
  reference {
    id
    name
    description
    uri
  }
}

fragment ActivityLogCalloutPostComment on ActivityLogEntryCalloutPostComment {
  callout {
    id
    nameID
    profile {
      id
      displayName
    }
  }
  post {
    id
    nameID
    profile {
      id
      displayName
    }
  }
}

fragment ActivityLogCalloutWhiteboardCreated on ActivityLogEntryCalloutWhiteboardCreated {
  callout {
    id
    nameID
    profile {
      id
      displayName
    }
  }
  whiteboard {
    id
    nameID
    profile {
      id
      displayName
    }
  }
}

fragment ActivityLogChallengeCreated on ActivityLogEntryChallengeCreated {
  challenge {
    id
    nameID
    profile {
      id
      displayName
      tagline
    }
  }
}

fragment ActivityLogOpportunityCreated on ActivityLogEntryOpportunityCreated {
  opportunity {
    id
    nameID
    profile {
      id
      displayName
      tagline
    }
  }
}

fragment ActivityLogCalloutDiscussionComment on ActivityLogEntryCalloutDiscussionComment {
  callout {
    id
    nameID
    profile {
      id
      displayName
    }
  }
}

fragment ActivityLogCalendarEventCreated on ActivityLogEntryCalendarEventCreated {
  calendar {
    id
  }
  calendarEvent {
    id
    nameID
    profile {
      id
      displayName
      description
    }
  }
}

fragment ActivityLogUpdateSent on ActivityLogEntryUpdateSent {
  message
}
