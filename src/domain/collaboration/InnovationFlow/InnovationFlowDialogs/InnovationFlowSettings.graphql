query InnovationFlowSettings(
  $spaceNameId: UUID_NAMEID!
  $includeChallenge: Boolean = false
  $includeOpportunity: Boolean = false
  $challengeNameId: UUID_NAMEID = "mockid" # workaround for mandatory param working in conjection with @include or @skip
  $opportunityNameId: UUID_NAMEID = "mockid" # workaround for mandatory param working in conjection with @include or @skip
) {
  space(ID: $spaceNameId) {
    id
    challenge(ID: $challengeNameId) @include(if: $includeChallenge) {
      id
      nameID
      innovationFlow {
        id
        profile {
          ...LifecycleProfile
        }
        type
        lifecycle {
          ...LifecycleDetails
        }
      }
      collaboration {
        ...InnovationFlowCollaboration
      }
    }
    opportunity(ID: $opportunityNameId) @include(if: $includeOpportunity) {
      id
      nameID
      innovationFlow {
        id
        profile {
          ...LifecycleProfile
        }
        type
        lifecycle {
          ...LifecycleDetails
        }
      }
      collaboration {
        ...InnovationFlowCollaboration
      }
    }
  }
}

fragment LifecycleProfile on Profile {
  id
  displayName
  description
  # tags: tagset {
  #   ...TagsetDetails
  # }
  tagsets {
    ...TagsetDetails
  }
  references {
    id
    name
    description
    uri
  }
  bannerNarrow: visual(type: CARD) {
    ...VisualFull
  }
}

fragment LifecycleDetails on Lifecycle {
  id
  state
  nextEvents
  stateIsFinal
}

fragment InnovationFlowCollaboration on Collaboration {
  id
  authorization {
    myPrivileges
  }
  callouts(displayLocations: [CONTRIBUTE_LEFT, CONTRIBUTE_RIGHT]) {
    id
    nameID
    type
    activity
    sortOrder
    framing {
      profile {
        id
        displayName
        flowState: tagset(tagsetName: FLOW_STATE) {
          ...TagsetDetails
        }
      }
    }
  }
}

mutation UpdateInnovationFlow($updateInnovationFlowData: UpdateInnovationFlowInput!) {
  updateInnovationFlow(innovationFlowData: $updateInnovationFlowData) {
    id
  }
}

mutation UpdateCalloutFlowState($calloutId: UUID!, $flowStateTagsetId: UUID!, $value: String!) {
  updateCallout(
    calloutData: { ID: $calloutId, profileData: { tagsets: [{ ID: $flowStateTagsetId, tags: [$value] }] } }
  ) {
    id
    sortOrder
    framing {
      profile {
        id
        flowState: tagset(tagsetName: FLOW_STATE) {
          ...TagsetDetails
        }
      }
    }
  }
}
