version: '3.9'

networks:
  alkemio_client_net:

volumes:
  alkemio_client_mysql_db:
  rabbitmq_data:
    driver: local

services:
  traefik:
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    container_name: alkemio_client_traefik
    image: traefik:v2.4.9
    restart: always
    ports:
      - 8888:8080
      - 3000:80
      - 3306:3306
    networks:
      - alkemio_client_net
    environment:
      - TZ=Europe/Amsterdam
    volumes:
      - type: bind
        source: ./.build/traefik/
        target: /etc/traefik/

  mysql_db:
    container_name: alkemio_client_mysql_db
    image: mysql:8.0.11
    networks:
      - alkemio_client_net
    environment:
      - MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE
    restart: always
    ports:
      - 3306
    volumes:
      - alkemio_client_mysql_db:/var/lib/mysql
      - ./.scripts/schema.sql:/bootstrap_scripts/1.sql
    command: --default-authentication-plugin=mysql_native_password --init-file /bootstrap_scripts/1.sql

  kratos_migrate:
    container_name: alkemio_client_kratos_migrate
    image: oryd/kratos:v0.7.6-alpha.1
    environment:
      - DSN=mysql://root:${MYSQL_ROOT_PASSWORD}@tcp(${DATABASE_HOST}:3306)/kratos?max_conns=20&max_idle_conns=4
    restart: on-failure
    networks:
      - alkemio_client_net
    volumes:
      - type: bind
        source: ./.build/ory/kratos/email-password
        target: /etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes

  kratos:
    container_name: alkemio_client_kratos
    image: oryd/kratos:v0.7.6-alpha.1
    depends_on:
      - kratos_migrate
    ports:
      - 4433
      - 4434
    restart: unless-stopped
    environment:
      - DSN=mysql://root:${MYSQL_ROOT_PASSWORD}@tcp(${DATABASE_HOST}:3306)/kratos?max_conns=20&max_idle_conns=4
      - LOG_LEVEL=trace
    networks:
      - alkemio_client_net
    volumes:
      - type: bind
        source: ./.build/ory/kratos/email-password
        target: /etc/config/kratos
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier

  oathkeeper:
    container_name: alkemio_client_oathkeeper
    image: oryd/oathkeeper:v0.38
    restart: always
    depends_on:
      - kratos
    ports:
      - 4455
      - 4456
    environment:
      - LOG_LEVEL=debug
    networks:
      - alkemio_client_net
    volumes:
      - ./.build/ory/oathkeeper:/etc/config/oathkeeper
    command: serve proxy -c "/etc/config/oathkeeper/oathkeeper.yml"

  ipfs:
    container_name: alkemio_client_ipfs
    image: ipfs/go-ipfs:v0.9.1
    networks:
      - alkemio_client_net
    restart: always
    ports:
      - 4001
      - 4002
      - 5001
      - 8080
    volumes:
      - /tmp/ipfs-docker-data:/data/ipfs

  alkemio_server:
    container_name: alkemio_client_server
    image: alkemio/server:v0.15.0
    depends_on:
      - mysql_db
      - ipfs
    networks:
      - alkemio_client_net
    environment:
      - NODE_ENV
      - DATABASE_HOST
      - MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE
      - WAIT_HOSTS=mysql_db:3306
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
      - GRAPHQL_ENDPOINT_PORT=4000
      - IPFS_ENDPOINT=http://ipfs:5001
      - IPFS_CLIENT_ENDPOINT=http://localhost:3000/ipfs
      - AUTH_ORY_KRATOS_ISSUER=http://alkemio-client/
      - AUTH_ORY_KRATOS_JWKS_URI=http://oathkeeper:4456/.well-known/jwks.json
      - AUTH_ORY_KRATOS_PUBLIC_BASE_URL=http://localhost:3000/identity/ory/kratos/public
      - AUTH_ORY_KRATOS_PUBLIC_BASE_URL_SERVER=http://kratos:4433/
      - CORS_ENABLED=true
      - LOGGING_LEVEL_CONSOLE
      - LOGGING_CONSOLE_ENABLED
      - RABBITMQ_HOST=rabbitmq
      - COMMUNICATIONS_ENABLED
      - SYNAPSE_SERVER_URL=http://synapse:8008
      - SUBSCRIPTIONS_ENABLED
      - NOTIFICATIONS_ENABLED
    restart: always
    ports:
      - 4000
    command: sh -c "/wait && /create_db.sh && npm run migration:run && npm start"

  mailslurper:
    container_name: alkemio_client_kratos_mailslurper
    image: oryd/mailslurper:latest-smtps
    restart: always
    ports:
      - 4436
      - 4437
    networks:
      - alkemio_client_net

  synapse:
    container_name: alkemio_client_synapse
    image: matrixdotorg/synapse:v1.39.0
    restart: always
    environment:
      - SYNAPSE_NO_TLS=true
      - SYNAPSE_ENABLE_REGISTRATION=true
      - SYNAPSE_SERVER_NAME=alkemio.matrix.host
      - SYNAPSE_SERVER_URL
      - SYNAPSE_SERVER_SHARED_SECRET
    networks:
      - alkemio_client_net
    ports:
      - 8008
    volumes:
      - type: bind
        source: ./.build/synapse
        target: /data

  rabbitmq:
    container_name: alkemio_client_rabbitmq
    image: docker.io/bitnami/rabbitmq:3.9
    restart: always
    networks:
      - alkemio_client_net
    ports:
      - 4369
      - 5672
      - 25672
      - 15672
    environment:
      - RABBITMQ_SECURE_PASSWORD=yes
    volumes:
      - 'rabbitmq_data:/bitnami'

  notification:
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    container_name: alkemio_client_notifications
    hostname: notifications
    image: alkemio/notifications:v0.3.2
    environment:
      - RABBITMQ_HOST
      - LOGGING_CONSOLE_ENABLED
      - LOGGING_LEVEL_CONSOLE
      - EMAIL_SMTP_HOST
      - ENVIRONMENT=dev
      - ALKEMIO_SERVER_ENDPOINT
      - KRATOS_API_PUBLIC_ENDPOINT
      - SERVICE_ACCOUNT_USERNAME
      - SERVICE_ACCOUNT_PASSWORD
      - WAIT_HOSTS=alkemio_server:4000
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
    restart: always
    networks:
      - alkemio_client_net
    command: sh -c "/wait && npm run start"
